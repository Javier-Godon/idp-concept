apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: postgrescompositeworkloads.gitops.bluesolution.es
spec:
  compositeTypeRef:
    apiVersion: gitops.bluesolution.es/v1alpha1
    kind: PostgresCompositeWorkload
  mode: Pipeline
  pipeline:
    - step: patch-and-transform
      functionRef:
        name: function-patch-and-transform
      input:
        apiVersion: pt.fn.crossplane.io/v1beta1
        kind: Resources
        resources:
          - name: namespacePostgres
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                providerConfigRef:
                  name: provider-kubernetes
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: Namespace
                    metadata:
                      name: postgres

          # - name: persistentVolumeBluePostgresPvVolume
          #   base:
          #     apiVersion: kubernetes.crossplane.io/v1alpha2
          #     kind: Object
          #     spec:
          #       providerConfigRef:
          #         name: provider-kubernetes
          #       forProvider:
          #         manifest:
          #           apiVersion: v1
          #           kind: PersistentVolume
          #           metadata:
          #             name: blue-postgres-pv-volume
          #             labels:
          #               type: local
          #               app: blue-postgres
          #           spec:
          #             storageClassName: manual
          #             capacity:
          #               storage: 20Gi
          #             accessModes:
          #               - ReadWriteMany
          #             persistentVolumeReclaimPolicy: Retain
          #             hostPath:
          #               path: /mnt/data/postgres-volume

          # - name: persistenceVolumeClaimBluePostgresPvClaim
          #   base:
          #     apiVersion: kubernetes.crossplane.io/v1alpha2
          #     kind: Object
          #     spec:
          #       providerConfigRef:
          #         name: provider-kubernetes
          #       forProvider:
          #         manifest:
          #           apiVersion: v1
          #           kind: PersistentVolumeClaim
          #           metadata:
          #             name: blue-postgres-pv-claim
          #             namespace: postgres
          #             labels:
          #               app: blue-postgres
          #           spec:
          #             storageClassName: manual
          #             accessModes:
          #               - ReadWriteMany
          #             resources:
          #               requests:
          #                 storage: 20Gi
          #   patches:
          #     - fromFieldPath: "spec.label.postgresNamespace"
          #       toFieldPath: "spec.forProvider.manifest.metadata.namespace"
          #       policy:
          #         fromFieldPath: "Required"

          - name: persistenceVolumeClaimBluePostgresPvClaim
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                providerConfigRef:
                  name: provider-kubernetes
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: PersistentVolumeClaim
                    metadata:
                      name: blue-postgres-pv-claim
                      namespace: postgres
                      labels:
                        app: blue-postgres
                    spec:
                      accessModes:
                        - ReadWriteOnce
                      resources:
                        requests:
                          storage: 20Gi
                      #storageClassName: local-path # Minikube local path
            patches:
              - fromFieldPath: "spec.label.postgresNamespace"
                toFieldPath: "spec.forProvider.manifest.metadata.namespace"
                policy:
                  fromFieldPath: "Required"

          - name: configMapBluePostgresConfig
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                providerConfigRef:
                  name: provider-kubernetes
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: ConfigMap
                    metadata:
                      name: blue-postgres-config
                      namespace: postgres
                      labels:
                        app: blue-postgres
                    data:
                      POSTGRES_DB: blue_postgres
                      POSTGRES_USER: postgres
                      POSTGRES_PASSWORD: postgres
            patches:
              - fromFieldPath: "spec.label.postgresNamespace"
                toFieldPath: "spec.forProvider.manifest.metadata.namespace"
                policy:
                  fromFieldPath: "Required"

          - name: deploymentBluePostgres
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                providerConfigRef:
                  name: provider-kubernetes
                forProvider:
                  manifest:
                    apiVersion: apps/v1
                    kind: Deployment
                    metadata:
                      name: blue-postgres
                      namespace: postgres
                      labels:
                        app: blue-postgres
                    spec:
                      replicas: 1
                      selector:
                        matchLabels:
                          app: blue-postgres
                      template:
                        metadata:
                          labels:
                            app: blue-postgres
                        spec:
                          containers:
                            - name: postgres
                              image: postgres:18-alpine3.22
                              imagePullPolicy: IfNotPresent
                              ports:
                                - containerPort: 5432
                              envFrom:
                                - configMapRef:
                                    name: blue-postgres-config
                              volumeMounts:
                                - mountPath: /var/lib/postgresql/data/pgdata
                                  name: postgresdb
                              # env:
                              #  - name: PGDATA
                              #    value: /var/lib/postgresql/data/pgdata
                          volumes:
                            - name: postgresdb
                              persistentVolumeClaim:
                                claimName: blue-postgres-pv-claim
            patches:
              - fromFieldPath: "spec.label.postgresNamespace"
                toFieldPath: "spec.forProvider.manifest.metadata.namespace"
                policy:
                  fromFieldPath: "Required"

          - name: serviceBluePostgres
            base:
              apiVersion: kubernetes.crossplane.io/v1alpha2
              kind: Object
              spec:
                providerConfigRef:
                  name: provider-kubernetes
                forProvider:
                  manifest:
                    apiVersion: v1
                    kind: Service
                    metadata:
                      name: blue-postgres
                      namespace: postgres
                      labels:
                        app: blue-postgres
                    spec:
                      selector:
                        app: blue-postgres
                      type: NodePort
                      ports:
                        - port: 5432
                          targetPort: 5432
                          nodePort: 31543
            patches:
              - fromFieldPath: "spec.label.postgresNamespace"
                toFieldPath: "spec.forProvider.manifest.metadata.namespace"
                policy:
                  fromFieldPath: "Required"
