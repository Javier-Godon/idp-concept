# https://github.com/crossplane-contrib/provider-kubernetes/tree/main
# option 1: crossplane xpkg install provider xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.13.0
# oprion 2: creating this provider directly
# apiVersion: pkg.crossplane.io/v1
# kind: Provider
# metadata:
#   name: provider-kubernetes
# spec:
#   package: xpkg.upbound.io/crossplane-contrib/provider-kubernetes:v0.15.0
#   runtimeConfigRef:
#     apiVersion: pkg.example.org/v1
#     kind: DeploymentRuntimeConfig
#     name: default

# Previously execute (https://github.com/crossplane-contrib/provider-kubernetes?tab=readme-ov-file)
# SA=$(kubectl -n crossplane-system get sa -o name | grep provider-kubernetes | sed -e 's|serviceaccount\/|crossplane-system:|g')
#kubectl create clusterrolebinding provider-kubernetes-admin-binding --clusterrole cluster-admin --serviceaccount="${SA}"

apiVersion: pkg.crossplane.io/v1
kind: Provider
metadata:
  name: provider-kubernetes
spec:
  package: xpkg.upbound.io/upbound/provider-kubernetes:v0.18.0
  runtimeConfigRef:
    apiVersion: pkg.crossplane.io/v1beta1
    kind: DeploymentRuntimeConfig
    name: provider-kubernetes
---
apiVersion: pkg.crossplane.io/v1beta1
kind: DeploymentRuntimeConfig
metadata:
  name: provider-kubernetes
spec:
  serviceAccountTemplate:
    metadata:
      name: provider-kubernetes
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: provider-kubernetes-cluster-admin
subjects:
  - kind: ServiceAccount
    name: provider-kubernetes
    namespace: crossplane-system
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
